PARSER_BEGIN(Sintactico)
import java.util.*;
class Sintactico
{
    public static void main ( String[] args) throws ParseException
    {
        try
        {
            Sintactico a = new test (System.in) ; 
            a.Iniciar();
            System.out.println("La cadena fue aceptada correctamente");
        }
        catch(ParseException e)
        {
            System.out.println("Hubo un error ");
        }
    }

}
PARSER_END(test)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

TOKEN :
{
    <#DIGITO:(["0"-"9"])+>
    | <#DECIMAL: <DIGITO>(".")?(<DIGITO>)?>
}


TOKEN :
{
	<CICLOS : ("for" | "foreach" | "while)>
	| <PREGUNTA: ("if")>
    | <IMPRIMIR: "cout"| "write" | "writeline">
    | <PUNTOYCOMA: ";">
    | <TIPODATO: "int"|"decimal"|"string"|"hexdecimal"|"octal"|"bool"|"var">
    | <OPRELACIONAL: "<=" | ">=" | "==" | "<" | ">"| "!=" >
    | <OPLOGICO: "&&" | "||" | "!" | "^^" | "~" >
    | <NUMERO:("+"|"-")?(<DECIMAL>)+>
    | <RECORRIDA: "<<"|">>" >
    | <LLAVEIZQ: "{" >
    | <LLAVEDER: "}" >
    | <ALEATORIO: "random" | "rand" | "srand" >
    | <CORCHETEIZQ: "[" >
    | <CORCHETEDER : "]" >
    | <PARENTESISIZQ: "(" >
    | <PARENTESISDER: ")" >
    | <IDENTIFICADOR : (["A"-"Z","a"-"z","0"-"9","_"])+>
    | <IGUAL: "=">
}

void Analizar():
{
 <PROGRAMA> <IDENTIFICADOR> Bloque()<EOF>
}

void Bloque():
{
 <LLAVEIZQ> instructorFOR() <LLAVEDER>
}

void Condicion():
{
 <PARENTESISIZQ> <IDENTIFICADOR> <IGUAL>  (<IDENTIFICADOR>|<NUMERO>) <PARENTESISDER> <PUNTOYCOMA>
}

Void Incremento():
{
<IDENTIFICADOR> <ADICIONSUSTRACCION>
}

Void CondicionControl():
{
<PARENTESISIZQ> <IDENTIFICADOR> <PARENTESISDER> 
}

Void Asignacion():
{
<TIPODATO> <IDENTIFICADOR> <IGUAL> (<IDENTIFICADOR>|<NUMERO>) <PUNTOYCOMA>
}

Void Aleatorio():
{
<LLAVEIZQ> <IDENTIFICADOR> <CORCHETEDER> <ALEATORIO> <SIGUIENTE> <PARENTESISIZQ> <NÚMERO> <PARENTESISDER> <OPERADORES> <NÚMERO> <PUNTOYCOMA> <LLAVEDER>
}



